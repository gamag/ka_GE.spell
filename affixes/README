The general idea behind the automatic affix compression is to use hunspells
munch to find stems of single word forms appearing in our word lists, identify
the word type by analyzing the affixes found by munch using sed and replace
them by a list of all allowed affixes for this word type.

Lets give a simple example, assume a we have the following word list:
სახლი
სახლში
ხახლისა 
ხახლები
ხახლებისა

In the nouns.pre file we could have the following affix definitions:

SFX a Y 3
SFX a   ი       ები             ი
SFX a   ა       ები             ა
SFX a   0       ები             [ეოუ]

SFX c Y 3
SFX c   ი       ებისა           ი
SFX c   ა       ებისა           ა
SFX c   0       ებისა           [ეოუ]

SFX t Y 4
SFX t   0       სა              ი  
SFX t   0       სი              [ოუ]  
SFX t   ა       ისა             ა  
SFX t   ე       ისა             ე  

SFX v Y 2
SFX v   ი       ში            ი
SFX v   0       ში            [აეოუ]

munch will take the word list and the affix definitions and create from it

სახლი/atvc

Since a, t and v together can only appear on a regular noun, we can safely
replace /atvc with something defined nouns.aff that gives us all allowed noun
forms, so in the end we expanded our four-words word list to something like:

სახლი
სახლმა
სახლს
სახლსა
სახლის
სახლისა
სახლით
სახლად
სახლიც
... and so on.

This method looks nice, but has at least the following difficulties:

munch needs a stem to appear in the original word list, else it will find
nothing and we are can't expand anything. For nouns, I decided to ignore words
without nominative -ი.

Also, it is not perfect in a sense that it might take suboptimal stems that
match too, in the give example above, it is very well possible, that munch
creates

სახლი/tv
სახლები/t

and our identification will break. The munch results aren't even stable between
different runs, so we can't be sure two builds of the same source of our
dictionary will contain the same words.

Sed is't the most flexible tool for what we need neither, but it does is job well.

Other problems lie in the Georgian language. Already the syncope (წყალი, წყლის)
turns out to be quite difficult to identify like that, since the non-syncope
stem has no plural form and the syncope-stem is not in the word list, so munch
can't find them. Taking for example the genitive form as stem and using sed to
turn it into the actual stem might be a solution...
Verbs are generally too complicated to give good results here. But we might be
able to generate some useful forms forms.

